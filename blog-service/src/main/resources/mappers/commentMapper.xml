<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qyy.blog.blogservice.dao.CommentDao">

    <resultMap id="BaseResultMap" type="com.qyy.blog.blogfacade.entity.BlogComment">
        <id column="comment_id" jdbcType="BIGINT" property="commentId"/>
        <result column="blog_id" jdbcType="BIGINT" property="blogId"/>
        <result column="commentator" jdbcType="VARCHAR" property="commentator"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="website_url" jdbcType="VARCHAR" property="websiteUrl"/>
        <result column="comment_body" jdbcType="VARCHAR" property="commentBody"/>
        <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime"/>
        <result column="commentator_ip" jdbcType="VARCHAR" property="commentatorIp"/>
        <result column="reply_body" jdbcType="VARCHAR" property="replyBody"/>
        <result column="reply_create_time" jdbcType="TIMESTAMP" property="replyCreateTime"/>
        <result column="comment_status" jdbcType="TINYINT" property="commentStatus"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
    </resultMap>
    <sql id="Base_Column_List">
    comment_id, blog_id, commentator, email, website_url, comment_body, comment_create_time,
    commentator_ip, reply_body, reply_create_time, comment_status, is_deleted
  </sql>
    <select id="findCommentList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_blog_comment
        where is_deleted=0
        <if test="blogId!=null">
            AND blog_id = #{blogId}
        </if>
        <if test="commentStatus!=null">
            AND comment_status = #{commentStatus}
        </if>
        order by comment_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="getTotalComments" parameterType="Map" resultType="int">
        select count(*) from tb_blog_comment
        where is_deleted=0
        <if test="blogId!=null">
            AND blog_id = #{blogId}
        </if>
        <if test="commentStatus!=null">
            AND comment_status = #{commentStatus}
        </if>
    </select>

    <update id="deleteBatch">
        update tb_blog_comment
        set
        is_deleted = 1
        where comment_id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="checkDone">
        update  tb_blog_comment
        set
        comment_status = 1
        where comment_id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="reply">
        update  tb_blog_comment
        set
        reply_body = #{body}
        where  1=1
        and is_deleted = 0
        and comment_id = #{id}

    </update>

</mapper>